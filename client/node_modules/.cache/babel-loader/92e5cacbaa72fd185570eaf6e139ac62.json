{"ast":null,"code":"var _jsxFileName = \"/home/anastasisgi/Documents/studyReactNode/booking/client/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals'; // 1.import from react-redux  and redux \n\nimport { createStore, combineReducers } from 'redux';\nimport { Provider } from 'react-redux';\nimport { composeWithDevTools } from 'redux-devtools-extension'; //2.Create a reducer function \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst authReducer = (state = {}, action) => {\n  //  Each action will have a {type:\" e.g. LOGGED_IN_USER   \", payload: e.g. {name:\"ryan\",role:\"seller\"}  }\n  switch (action.type) {\n    case \"LOGGED_IN_USER\":\n      return { ...state,\n        ...action.payload\n      };\n\n    case \"LOGGED_OUT\":\n      return action.payload;\n\n    default:\n      return state;\n  }\n}; //  3. Combine multiple reducers \n\n\nconst rootReducer = combineReducers({\n  user: authReducer\n}); // 4. Create redux store \n// we need to execure the below devtools because it is a function \n\nconst store = createStore(rootReducer, composeWithDevTools()); // 5. Provide redux store to the whole app\n// see below we are rapping our app with the Provider tags \n\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 1\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 43,\n  columnNumber: 3\n}, this), document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();","map":{"version":3,"sources":["/home/anastasisgi/Documents/studyReactNode/booking/client/src/index.js"],"names":["React","ReactDOM","App","reportWebVitals","createStore","combineReducers","Provider","composeWithDevTools","authReducer","state","action","type","payload","rootReducer","user","store","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,eAAP,MAA4B,mBAA5B,C,CACA;;AACC,SAAQC,WAAR,EAAoBC,eAApB,QAA0C,OAA1C;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,SAAQC,mBAAR,QAAkC,0BAAlC,C,CACA;;;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAC,EAAP,EAAUC,MAAV,KAAmB;AACtC;AACA,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,gBAAL;AACE,aAAO,EAAC,GAAGF,KAAJ;AAAW,WAAGC,MAAM,CAACE;AAArB,OAAP;;AACA,SAAK,YAAL;AACE,aAAOF,MAAM,CAACE,OAAd;;AACA;AACE,aAAOH,KAAP;AANR;AAQA,CAVD,C,CAaD;;;AAEA,MAAMI,WAAW,GAAGR,eAAe,CAAC;AAClCS,EAAAA,IAAI,EAAEN;AAD4B,CAAD,CAAnC,C,CAIA;AACA;;AACA,MAAMO,KAAK,GAAGX,WAAW,CAACS,WAAD,EAAaN,mBAAmB,EAAhC,CAAzB,C,CAEA;AAEA;;AAKAN,QAAQ,CAACe,MAAT,eACE,QAAC,KAAD,CAAO,UAAP;AAAA,yBACF,QAAC,QAAD;AAAU,IAAA,KAAK,EAAID,KAAnB;AAAA,2BAEI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AADE;AAAA;AAAA;AAAA;AAAA,QADF,EAQEE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CARF,E,CAWA;AACA;AACA;;AACAf,eAAe","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// 1.import from react-redux  and redux \n import {createStore,combineReducers} from 'redux'\n import {Provider} from 'react-redux'\n import {composeWithDevTools} from 'redux-devtools-extension'\n //2.Create a reducer function \n\n const authReducer = (state={},action)=>{\n  //  Each action will have a {type:\" e.g. LOGGED_IN_USER   \", payload: e.g. {name:\"ryan\",role:\"seller\"}  }\n  switch(action.type) {\n    case \"LOGGED_IN_USER\":\n      return {...state, ...action.payload}\n      case \"LOGGED_OUT\":\n        return action.payload;\n        default:\n          return state;\n  }\n }\n\n\n//  3. Combine multiple reducers \n\nconst rootReducer = combineReducers({\n  user: authReducer,\n})\n\n// 4. Create redux store \n// we need to execure the below devtools because it is a function \nconst store = createStore(rootReducer,composeWithDevTools());\n\n// 5. Provide redux store to the whole app\n\n// see below we are rapping our app with the Provider tags \n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n<Provider store = {store}>\n\n    <App />\n\n</Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}